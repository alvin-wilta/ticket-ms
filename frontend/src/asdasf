import { ApolloServer, gql } from 'apollo-server';

const tickets = [
  { id: '1', title: 'Ticket 1', description: 'Description 1', status: 'Open', name: 'John Doe' },
  { id: '2', title: 'Ticket 2', description: 'Description 2', status: 'Closed', name: 'Jane Doe' },
  // Add more sample tickets if needed
];

const resolvers = {
  Query: {
    tickets: () => tickets,
  },
  Mutation: {
    createTicket: (_, { title, description, status, name }) => {
      const newTicket = { id: String(tickets.length + 1), title, description, status, name };
      tickets.push(newTicket);
      return newTicket;
    },
    updateTicket: (_, { id, status }) => {
      const ticketIndex = tickets.findIndex((t) => t.id === id);
      if (ticketIndex !== -1) {
        tickets[ticketIndex].status = status;
        return tickets[ticketIndex];
      }
      return null;
    },
  },
};

const server = new ApolloServer({ typeDefs, resolvers });

server.listen().then(({ url }) => {
  console.log(`ğŸš€ Server ready at ${url}`);
});
